---
// https://daisyui.com/components/textarea/


import type { 
    DisplaySettingsFragment, OptiFormsDiTextboxElement } from '../../../../__generated/sdk';
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';

// https://daisyui.com/components/input/


export interface Props {
    data: OptiFormsDiTextboxElement;
    contentPayload: ContentPayload;
    displaySettings: DisplaySettingsFragment[];
    Label?: string;
    Tooltip?: string;
    Placeholder?: string;
    AutoComplete?: string;
    PredefinedValue?: string;
    Validators?: any;
}
const { data, displaySettings } = Astro.props as Props;
const { Label, Tooltip, Placeholder, AutoComplete, PredefinedValue } = data;

// console.log('OptiFormsTextareaElement data:', JSON.stringify(data, null, 2));

// export interface Props {
//   Label?: string;
//   Tooltip?: string;
//   Placeholder?: string;
//   AutoComplete?: string;
//   PredefinedValue?: string;
//   Validators?: any;
// }

// const {
//   Label,
//   Tooltip,
//   Placeholder,
//   AutoComplete,
//   PredefinedValue,
//   Validators
// } = Astro.props;

// Generate a unique ID for the input
const inputId = `textbox-${Math.random().toString(36).substr(2, 9)}`;
---

<!-- <h1>Textarea element!</h1> -->


<fieldset class="fieldset w-full">
  <legend class="fieldset-legend text-lg font-semibold">{Label}</legend>
  <textarea class="textarea h-24 w-full" placeholder={Placeholder} value={PredefinedValue}></textarea>
  <!-- <div class="label">Optional</div> -->
</fieldset>


<!-- 
<div class="form-group">
  {Label && (
    <label for={inputId} class="form-label">
      {Label}
      {Tooltip && (
        <span class="tooltip" title={Tooltip}>
          <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
            <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
          </svg>
        </span>
      )}
    </label>
  )}
  
  <input
    type="text"
    id={inputId}
    name={inputId}
    class="form-control"
    placeholder={Placeholder}
    value={PredefinedValue}
    autocomplete={AutoComplete}
    data-validators={Validators ? JSON.stringify(Validators) : undefined}
  />
</div>

<style>
  .form-group {
    margin-bottom: 1rem;
  }

  .form-label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #212529;
  }

  .form-control {
    display: block;
    width: 100%;
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #212529;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ced4da;
    border-radius: 0.375rem;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  }

  .form-control:focus {
    color: #212529;
    background-color: #fff;
    border-color: #86b7fe;
    outline: 0;
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  }

  .tooltip {
    display: inline-block;
    margin-left: 0.25rem;
    color: #6c757d;
    cursor: help;
  }

  .tooltip:hover {
    color: #495057;
  } -->