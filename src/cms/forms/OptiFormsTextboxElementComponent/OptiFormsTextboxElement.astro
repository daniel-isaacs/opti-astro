---
import type { 
    DisplaySettingsFragment, OptiFormsTextboxElement } from '../../../../__generated/sdk';
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import { isRequiredValidator, isEmailValidator, isNumberValidator, isRegExpValidator, getRegularExpression } from '../formHelper';

// https://daisyui.com/components/input/


export interface Props {
    data: OptiFormsTextboxElement;
    contentPayload: ContentPayload;
    displaySettings: DisplaySettingsFragment[];
    Label?: string;
    Placeholder?: string;
    Tooltip?: string;
    PredefinedValue?: string;
    Validators?: any;
    AutoComplete?: string;
}
const { data, displaySettings } = Astro.props as Props;
const { Label, Placeholder, Tooltip, PredefinedValue, Validators, AutoComplete } = data;

const isRequired = isRequiredValidator(Validators);
const isEmail = isEmailValidator(Validators);
const isNumber = isNumberValidator(Validators);
const isRegExp = isRegExpValidator(Validators);

// Parse validators first, then use the helper function
const regularExpressionValue = getRegularExpression(Validators);

const inputType = isEmail ? 'email' : isNumber ? 'number' : 'text';
const validatorHint = isEmail ? 'Enter valid email address'
    : isNumber ? 'Enter valid number'
    : isRegExp ? regularExpressionValue : '';

// console.log("Textbox Element Data:", JSON.stringify(data, null, 2));
// Generate a unique ID for the input
// const inputId = `textbox-${Math.random().toString(36).substr(2, 9)}`;
---

<fieldset class="fieldset w-full">
  <legend class="fieldset-legend text-lg font-semibold">{Label}</legend>
  <input type={inputType} 
    class="input w-full"
    required={isRequired}
    placeholder={Placeholder} 
    value={PredefinedValue} 
    autocomplete={AutoComplete || "off"}
    pattern={regularExpressionValue || ''}
    title={Tooltip} />
  <!-- <p class="label">Optional</p>  -->
</fieldset>
